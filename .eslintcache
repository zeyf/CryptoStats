[{"D:\\React Projects\\cryptostats\\src\\index.js":"1","D:\\React Projects\\cryptostats\\src\\App.js":"2","D:\\React Projects\\cryptostats\\src\\reportWebVitals.js":"3","D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableState.js":"4","D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableContext.js":"5","D:\\React Projects\\cryptostats\\src\\components\\context\\types.js":"6","D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableReducer.js":"7","D:\\React Projects\\cryptostats\\src\\components\\layout\\Navbar\\Navbar.js":"8","D:\\React Projects\\cryptostats\\src\\components\\Table\\Table.js":"9","D:\\React Projects\\cryptostats\\src\\functions\\table functions\\TableFunctions.js":"10","D:\\React Projects\\cryptostats\\src\\components\\Crypto\\Crypto.js":"11","D:\\React Projects\\cryptostats\\src\\components\\Table\\useSortableData.js":"12","D:\\React Projects\\cryptostats\\src\\components\\Table\\TablePagination.js":"13","D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoContext.js":"14","D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoState.js":"15","D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoReducer.js":"16","D:\\React Projects\\cryptostats\\src\\components\\layout\\Loader\\Loader.js":"17","D:\\React Projects\\cryptostats\\src\\components\\Table\\TableSkeleton.js":"18","D:\\React Projects\\cryptostats\\src\\components\\layout\\Footer\\Footer.js":"19"},{"size":500,"mtime":1611623574376,"results":"20","hashOfConfig":"21"},{"size":969,"mtime":1611898604942,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":3518,"mtime":1611942566195,"results":"24","hashOfConfig":"21"},{"size":109,"mtime":1611613321572,"results":"25","hashOfConfig":"21"},{"size":468,"mtime":1611858107905,"results":"26","hashOfConfig":"21"},{"size":1079,"mtime":1611858960985,"results":"27","hashOfConfig":"21"},{"size":299,"mtime":1611943214086,"results":"28","hashOfConfig":"21"},{"size":7404,"mtime":1611942469020,"results":"29","hashOfConfig":"21"},{"size":3680,"mtime":1611859145995,"results":"30","hashOfConfig":"21"},{"size":618,"mtime":1611779592258,"results":"31","hashOfConfig":"21"},{"size":1165,"mtime":1611863609337,"results":"32","hashOfConfig":"21"},{"size":1773,"mtime":1611898075279,"results":"33","hashOfConfig":"21"},{"size":111,"mtime":1611774377557,"results":"34","hashOfConfig":"21"},{"size":1088,"mtime":1611809318454,"results":"35","hashOfConfig":"21"},{"size":498,"mtime":1611858837669,"results":"36","hashOfConfig":"21"},{"size":253,"mtime":1611775764415,"results":"37","hashOfConfig":"21"},{"size":5507,"mtime":1611890301495,"results":"38","hashOfConfig":"21"},{"size":205,"mtime":1611898521100,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"iun4fm",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\React Projects\\cryptostats\\src\\index.js",[],["81","82"],"D:\\React Projects\\cryptostats\\src\\App.js",[],"D:\\React Projects\\cryptostats\\src\\reportWebVitals.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableState.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableContext.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\types.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableReducer.js",[],"D:\\React Projects\\cryptostats\\src\\components\\layout\\Navbar\\Navbar.js",["83"],"D:\\React Projects\\cryptostats\\src\\components\\Table\\Table.js",["84","85","86"],"D:\\React Projects\\cryptostats\\src\\functions\\table functions\\TableFunctions.js",[],"D:\\React Projects\\cryptostats\\src\\components\\Crypto\\Crypto.js",["87","88","89","90","91"],"import React, {useEffect, useContext} from 'react'\r\nimport { mockComponent } from 'react-dom/test-utils'\r\nimport CryptoContext from '../context/CryptoContext/CryptoContext'\r\nimport Loader from '../layout/Loader/Loader'\r\n\r\nconst Crypto = ({match}) => {\r\n\r\n    const {GetCrypto, LOADING, CRYPTO} = useContext(CryptoContext);\r\n\r\n    useEffect(() => {\r\n        GetCrypto(match.params.CryptoID);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                {console.log(CRYPTO)}\r\n            </h1>\r\n            <img src={CRYPTO && CRYPTO.image.small} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Crypto\r\n","D:\\React Projects\\cryptostats\\src\\components\\Table\\useSortableData.js",[],"D:\\React Projects\\cryptostats\\src\\components\\Table\\TablePagination.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoContext.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoState.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoReducer.js",[],"D:\\React Projects\\cryptostats\\src\\components\\layout\\Loader\\Loader.js",[],"D:\\React Projects\\cryptostats\\src\\components\\Table\\TableSkeleton.js",["92"],"import {useContext} from 'react'\r\nimport './Table.css'\r\nimport Skeleton, {SkeletonTheme} from 'react-loading-skeleton'\r\nimport {Link} from 'react-router-dom'\r\nimport useSortableData from './useSortableData'\r\nimport TableContext from '../context/TableContext/TableContext'\r\n\r\n\r\nconst TableSkeleton = () => {\r\n    \r\n\r\n    const { POSTSPERPAGE } = useContext(TableContext);\r\n    //default postsperpage is 25. now it will be able to adjusted based posts per page.\r\n\r\n    const DefaultCount = () => {\r\n        const RowList=[]\r\n        for (let i=1; i < (POSTSPERPAGE + 1); i++) {\r\n            RowList.push(i)\r\n        }\r\n        return RowList\r\n    }\r\n\r\n    const SkeletonType = (type) => {\r\n        if (type === 'rank') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton circle={true} width={20} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === 'icon') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton circle={true} width={20} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === 'name') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton  width={225} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === 'price') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton width={50} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === 'priceChange1d') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton width={50} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === '24hvolume') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton width={50} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === 'sparklinesvg') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton width={150} height={50}count={1}/>\r\n                </SkeletonTheme>\r\n        }\r\n    }\r\n\r\n    return (\r\n            <>\r\n             <table className='table table--primary'>\r\n                <thead className='table__head'>\r\n                    <tr className='table__head__row'>\r\n                        <th className='table__headcol table__headcol--rank'>\r\n                            <button className='table__headcol__button' style={{width: '100%'}}>\r\n                             #\r\n                            </button>\r\n                        </th>\r\n                        <th className='table__headcol table__headcol--name'>\r\n                            <button className='table__headcol__button' style={{width: '100%'}}>\r\n                                NAME\r\n                            </button>\r\n                        </th>\r\n                        <th className='table__headcol table__headcol--pricechange24h'>\r\n                            <button className='table__headcol__button' style={{width: '100%'}}>\r\n                                24H CHANGE\r\n                            </button>\r\n                        </th>\r\n                        <th className='table__headcol table__headcol--price'>\r\n                            <button className='table__headcol__button' style={{width: '100%'}}>\r\n                                PRICE\r\n                            </button>\r\n                        </th>\r\n                        <th className='table__headcol table__headcol--volume'>\r\n                            <button className='table__headcol__button' style={{width: '100%'}}>\r\n                                24H VOLUME\r\n                            </button>\r\n                        </th>\r\n                        <th className='table__headcol table__headcol--sparkline'>\r\n                            PRICE 7D\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {DefaultCount().map((item, i) => {\r\n                            return <tr className='table__row'>\r\n                            <td className='tablebody__data tablebody__data--rank'>{SkeletonType('rank')}</td>\r\n                            <td className='tablebody__data tablebody__data--name'>\r\n                                    <Link style={{textDecoration: 'none', margin: '0px', padding: '0px'}} to={``}>\r\n                                <div className='table_'>\r\n                                        {<span style={{margin: '0px 10px'}}>{SkeletonType('icon')}</span>}\r\n                                    <p className='s'>{SkeletonType('name')}</p>\r\n                                    \r\n                                </div>\r\n                                </Link>\r\n                            </td>\r\n                            <td className='tablebody__data tablebody__data--pricechange24h'>{SkeletonType('priceChange1d')}</td>\r\n                            <td className='tablebody__data tablebody__data--price'>{SkeletonType('price')}</td>\r\n                            <td className='tablebody__data tablebody__data--volume'>{SkeletonType('24hvolume')}</td>\r\n                            \r\n                            <td className='tablebody__data tablebody__data--sparkline'>\r\n                                {SkeletonType('sparklinesvg')}\r\n                            </td>\r\n                        </tr>\r\n                \r\n                    })}\r\n                </tbody>\r\n                </table>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default TableSkeleton\r\n","D:\\React Projects\\cryptostats\\src\\components\\layout\\Footer\\Footer.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"101","line":3,"column":37,"nodeType":"99","messageId":"100","endLine":3,"endColumn":52},{"ruleId":"97","severity":1,"message":"102","line":98,"column":96,"nodeType":"99","messageId":"100","endLine":98,"endColumn":104},{"ruleId":"97","severity":1,"message":"103","line":98,"column":143,"nodeType":"99","messageId":"100","endLine":98,"endColumn":156},{"ruleId":"97","severity":1,"message":"104","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":23},{"ruleId":"97","severity":1,"message":"105","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":14},{"ruleId":"97","severity":1,"message":"106","line":8,"column":23,"nodeType":"99","messageId":"100","endLine":8,"endColumn":30},{"ruleId":"107","severity":1,"message":"108","line":12,"column":8,"nodeType":"109","endLine":12,"endColumn":10,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":19,"column":13,"nodeType":"113","endLine":19,"endColumn":55},{"ruleId":"97","severity":1,"message":"114","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":23},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'SparklinesSpots' is defined but never used.","'priceBtc' is assigned a value but never used.","'priceChange1w' is assigned a value but never used.","'mockComponent' is defined but never used.","'Loader' is defined but never used.","'LOADING' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetCrypto' and 'match.params.CryptoID'. Either include them or remove the dependency array.","ArrayExpression",["117"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useSortableData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [GetCrypto, match.params.CryptoID]",{"range":"120","text":"121"},[399,401],"[GetCrypto, match.params.CryptoID]"]