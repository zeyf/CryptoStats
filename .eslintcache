[{"D:\\React Projects\\cryptostats\\src\\index.js":"1","D:\\React Projects\\cryptostats\\src\\App.js":"2","D:\\React Projects\\cryptostats\\src\\reportWebVitals.js":"3","D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableState.js":"4","D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableContext.js":"5","D:\\React Projects\\cryptostats\\src\\components\\context\\types.js":"6","D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableReducer.js":"7","D:\\React Projects\\cryptostats\\src\\components\\layout\\Navbar\\Navbar.js":"8","D:\\React Projects\\cryptostats\\src\\components\\Table\\Table.js":"9","D:\\React Projects\\cryptostats\\src\\components\\Crypto\\Crypto.js":"10","D:\\React Projects\\cryptostats\\src\\components\\Table\\useSortableData.js":"11","D:\\React Projects\\cryptostats\\src\\components\\Table\\TablePagination.js":"12","D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoContext.js":"13","D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoState.js":"14","D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoReducer.js":"15","D:\\React Projects\\cryptostats\\src\\components\\layout\\Loader\\Loader.js":"16","D:\\React Projects\\cryptostats\\src\\components\\Table\\TableSkeleton.js":"17","D:\\React Projects\\cryptostats\\src\\components\\layout\\Footer\\Footer.js":"18","D:\\React Projects\\cryptostats\\src\\functions\\Formatting Functions\\FormatFunctions.js":"19","D:\\React Projects\\cryptostats\\src\\components\\Crypto\\CryptoSkeleton.js":"20"},{"size":500,"mtime":1611623574376,"results":"21","hashOfConfig":"22"},{"size":969,"mtime":1611898604942,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2773,"mtime":1611990176122,"results":"25","hashOfConfig":"22"},{"size":109,"mtime":1611613321572,"results":"26","hashOfConfig":"22"},{"size":512,"mtime":1611960812177,"results":"27","hashOfConfig":"22"},{"size":1245,"mtime":1611960802256,"results":"28","hashOfConfig":"22"},{"size":383,"mtime":1611976361988,"results":"29","hashOfConfig":"22"},{"size":8124,"mtime":1612025678287,"results":"30","hashOfConfig":"22"},{"size":15700,"mtime":1612060017614,"results":"31","hashOfConfig":"22"},{"size":1165,"mtime":1611863609337,"results":"32","hashOfConfig":"22"},{"size":2815,"mtime":1612027321161,"results":"33","hashOfConfig":"22"},{"size":111,"mtime":1611774377557,"results":"34","hashOfConfig":"22"},{"size":1088,"mtime":1611977204835,"results":"35","hashOfConfig":"22"},{"size":498,"mtime":1612045644629,"results":"36","hashOfConfig":"22"},{"size":253,"mtime":1611775764415,"results":"37","hashOfConfig":"22"},{"size":5505,"mtime":1611960621748,"results":"38","hashOfConfig":"22"},{"size":205,"mtime":1611898521100,"results":"39","hashOfConfig":"22"},{"size":5733,"mtime":1612048811788,"results":"40","hashOfConfig":"22"},{"size":4740,"mtime":1612050912367,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"iun4fm",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Projects\\cryptostats\\src\\index.js",[],["85","86"],"D:\\React Projects\\cryptostats\\src\\App.js",[],"D:\\React Projects\\cryptostats\\src\\reportWebVitals.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableState.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableContext.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\types.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableReducer.js",[],"D:\\React Projects\\cryptostats\\src\\components\\layout\\Navbar\\Navbar.js",[],"D:\\React Projects\\cryptostats\\src\\components\\Table\\Table.js",["87","88","89"],"D:\\React Projects\\cryptostats\\src\\components\\Crypto\\Crypto.js",["90","91","92","93"],"D:\\React Projects\\cryptostats\\src\\components\\Table\\useSortableData.js",[],"D:\\React Projects\\cryptostats\\src\\components\\Table\\TablePagination.js",["94","95"],"D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoContext.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoState.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoReducer.js",[],"D:\\React Projects\\cryptostats\\src\\components\\layout\\Loader\\Loader.js",[],["96","97"],"D:\\React Projects\\cryptostats\\src\\components\\Table\\TableSkeleton.js",["98"],"import {useContext} from 'react'\r\nimport './Table.css'\r\nimport Skeleton, {SkeletonTheme} from 'react-loading-skeleton'\r\nimport {Link} from 'react-router-dom'\r\nimport useSortableData from './useSortableData'\r\nimport TableContext from '../context/TableContext/TableContext'\r\n\r\n\r\nconst TableSkeleton = () => {\r\n    \r\n\r\n    const { ROWSPERPAGE } = useContext(TableContext);\r\n    //default postsperpage is 25. now it will be able to adjusted based posts per page.\r\n\r\n    const DefaultCount = () => {\r\n        const RowList=[]\r\n        for (let i=1; i < (ROWSPERPAGE + 1); i++) {\r\n            RowList.push(i)\r\n        }\r\n        return RowList\r\n    }\r\n\r\n    const SkeletonType = (type) => {\r\n        if (type === 'rank') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton circle={true} width={20} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === 'icon') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton circle={true} width={20} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === 'name') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton  width={225} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === 'price') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton width={50} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === 'priceChange1d') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton width={50} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === '24hvolume') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton width={50} height={20}count={1}/>\r\n                </SkeletonTheme>\r\n        } else if (type === 'sparklinesvg') {\r\n            return <SkeletonTheme color='#cececf'>\r\n                <Skeleton width={150} height={50}count={1}/>\r\n                </SkeletonTheme>\r\n        }\r\n    }\r\n\r\n    return (\r\n            <>\r\n             <table className='table table--primary'>\r\n                <thead className='table__head'>\r\n                    <tr className='table__head__row'>\r\n                        <th className='table__headcol table__headcol--rank'>\r\n                            <button className='table__headcol__button' style={{width: '100%'}}>\r\n                             #\r\n                            </button>\r\n                        </th>\r\n                        <th className='table__headcol table__headcol--name'>\r\n                            <button className='table__headcol__button' style={{width: '100%'}}>\r\n                                NAME\r\n                            </button>\r\n                        </th>\r\n                        <th className='table__headcol table__headcol--pricechange24h'>\r\n                            <button className='table__headcol__button' style={{width: '100%'}}>\r\n                                24H CHANGE\r\n                            </button>\r\n                        </th>\r\n                        <th className='table__headcol table__headcol--price'>\r\n                            <button className='table__headcol__button' style={{width: '100%'}}>\r\n                                PRICE\r\n                            </button>\r\n                        </th>\r\n                        <th className='table__headcol table__headcol--volume'>\r\n                            <button className='table__headcol__button' style={{width: '100%'}}>\r\n                                24H VOLUME\r\n                            </button>\r\n                        </th>\r\n                        <th className='table__headcol table__headcol--sparkline'>\r\n                            PRICE 7D\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {DefaultCount().map((item, i) => {\r\n                            return <tr className='table__row'>\r\n                            <td className='tablebody__data tablebody__data--rank'>{SkeletonType('rank')}</td>\r\n                            <td className='tablebody__data tablebody__data--name'>\r\n                                    <Link style={{textDecoration: 'none', margin: '0px', padding: '0px'}} to={``}>\r\n                                <div className='table_'>\r\n                                        {<span style={{margin: '0px 10px'}}>{SkeletonType('icon')}</span>}\r\n                                    <p className='s'>{SkeletonType('name')}</p>\r\n                                    \r\n                                </div>\r\n                                </Link>\r\n                            </td>\r\n                            <td className='tablebody__data tablebody__data--pricechange24h'>{SkeletonType('priceChange1d')}</td>\r\n                            <td className='tablebody__data tablebody__data--price'>{SkeletonType('price')}</td>\r\n                            <td className='tablebody__data tablebody__data--volume'>{SkeletonType('24hvolume')}</td>\r\n                            \r\n                            <td className='tablebody__data tablebody__data--sparkline'>\r\n                                {SkeletonType('sparklinesvg')}\r\n                            </td>\r\n                        </tr>\r\n                \r\n                    })}\r\n                </tbody>\r\n                </table>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default TableSkeleton\r\n","D:\\React Projects\\cryptostats\\src\\components\\layout\\Footer\\Footer.js",[],"D:\\React Projects\\cryptostats\\src\\functions\\Formatting Functions\\FormatFunctions.js",[],"D:\\React Projects\\cryptostats\\src\\components\\Crypto\\CryptoSkeleton.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":3,"column":37,"nodeType":"105","messageId":"106","endLine":3,"endColumn":52},{"ruleId":"103","severity":1,"message":"107","line":121,"column":164,"nodeType":"105","messageId":"106","endLine":121,"endColumn":184},{"ruleId":"103","severity":1,"message":"108","line":121,"column":186,"nodeType":"105","messageId":"106","endLine":121,"endColumn":199},{"ruleId":"109","severity":1,"message":"110","line":13,"column":12,"nodeType":"111","endLine":13,"endColumn":14,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"113","line":18,"column":13,"nodeType":"105","messageId":"106","endLine":18,"endColumn":26},{"ruleId":"103","severity":1,"message":"114","line":20,"column":13,"nodeType":"105","messageId":"106","endLine":20,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":151,"column":29,"nodeType":"117","endLine":151,"endColumn":102},{"ruleId":"103","severity":1,"message":"118","line":40,"column":13,"nodeType":"105","messageId":"106","endLine":40,"endColumn":18},{"ruleId":"103","severity":1,"message":"119","line":40,"column":20,"nodeType":"105","messageId":"106","endLine":40,"endColumn":31},{"ruleId":"99","replacedBy":"120"},{"ruleId":"101","replacedBy":"121"},{"ruleId":"103","severity":1,"message":"122","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":23},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'SparklinesSpots' is defined but never used.","Identifier","unusedVar","'priceChange7d_CG_USD' is assigned a value but never used.","'priceChange1w' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetCrypto' and 'match.params.CryptoID'. Either include them or remove the dependency array.","ArrayExpression",["125"],"'setPriceColor' is assigned a value but never used.","'setSparklineColor' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'items' is assigned a value but never used.","'requestSort' is assigned a value but never used.",["123"],["124"],"'useSortableData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [GetCrypto, match.params.CryptoID]",{"range":"128","text":"129"},[469,471],"[GetCrypto, match.params.CryptoID]"]