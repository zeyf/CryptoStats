[{"D:\\React Projects\\cryptostats\\src\\index.js":"1","D:\\React Projects\\cryptostats\\src\\App.js":"2","D:\\React Projects\\cryptostats\\src\\reportWebVitals.js":"3","D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableState.js":"4","D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableContext.js":"5","D:\\React Projects\\cryptostats\\src\\components\\context\\types.js":"6","D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableReducer.js":"7","D:\\React Projects\\cryptostats\\src\\components\\layout\\Navbar\\Navbar.js":"8","D:\\React Projects\\cryptostats\\src\\components\\Table\\Table.js":"9","D:\\React Projects\\cryptostats\\src\\functions\\table functions\\TableFunctions.js":"10","D:\\React Projects\\cryptostats\\src\\components\\Crypto\\Crypto.js":"11","D:\\React Projects\\cryptostats\\src\\components\\Table\\useSortableData.js":"12","D:\\React Projects\\cryptostats\\src\\components\\Table\\TablePagination.js":"13","D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoContext.js":"14","D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoState.js":"15","D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoReducer.js":"16","D:\\React Projects\\cryptostats\\src\\components\\layout\\Loader\\Loader.js":"17"},{"size":500,"mtime":1611623574376,"results":"18","hashOfConfig":"19"},{"size":894,"mtime":1611775625486,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2895,"mtime":1611773754560,"results":"22","hashOfConfig":"19"},{"size":109,"mtime":1611613321572,"results":"23","hashOfConfig":"19"},{"size":371,"mtime":1611799091453,"results":"24","hashOfConfig":"19"},{"size":906,"mtime":1611690666506,"results":"25","hashOfConfig":"19"},{"size":211,"mtime":1611767106127,"results":"26","hashOfConfig":"19"},{"size":5559,"mtime":1611808416390,"results":"27","hashOfConfig":"19"},{"size":3735,"mtime":1611808129599,"results":"28","hashOfConfig":"19"},{"size":618,"mtime":1611779592258,"results":"29","hashOfConfig":"19"},{"size":1172,"mtime":1611759956840,"results":"30","hashOfConfig":"19"},{"size":1600,"mtime":1611773790256,"results":"31","hashOfConfig":"19"},{"size":111,"mtime":1611774377557,"results":"32","hashOfConfig":"19"},{"size":1088,"mtime":1611809318454,"results":"33","hashOfConfig":"19"},{"size":496,"mtime":1611779207964,"results":"34","hashOfConfig":"19"},{"size":253,"mtime":1611775764415,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"iun4fm",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Projects\\cryptostats\\src\\index.js",[],["74","75"],"D:\\React Projects\\cryptostats\\src\\App.js",[],"D:\\React Projects\\cryptostats\\src\\reportWebVitals.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableState.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableContext.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\types.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\TableContext\\TableReducer.js",[],"D:\\React Projects\\cryptostats\\src\\components\\layout\\Navbar\\Navbar.js",[],"D:\\React Projects\\cryptostats\\src\\components\\Table\\Table.js",["76","77","78","79","80","81"],"D:\\React Projects\\cryptostats\\src\\functions\\table functions\\TableFunctions.js",["82"],"\r\nconst TableFunctions = {\r\n    newVol: (volume) => {\r\n        const Precision = 4;\r\n        const numberregex = /[0-9]/gi;\r\n        const commaregex = /,/gi\r\n        const newVol = Number(volume.toPrecision(Precision)).toLocaleString('en')\r\n        const VolNumCount = newVol.match(numberregex).length;\r\n        const formattednewVol = () => {\r\n            if (String(newVol).match(numberregex)) {\r\n                const newVolNumSplit = newVol.replaceAll(commaregex, '').split('');\r\n                if (VolNumCount === 11) {\r\n                    return `${newVolNumSplit[0]}${newVolNumSplit[1]}.${newVolNumSplit[2]}${newVolNumSplit[3]}`\r\n                } else if (VolNumCount === 10) {\r\n                    return `${newVolNumSplit[0]}.${newVolNumSplit[1]}${newVolNumSplit[2]}`\r\n                } else if(VolNumCount === 9) {\r\n                    return `${newVolNumSplit[0]}${newVolNumSplit[1]}${newVolNumSplit[2]}.${newVolNumSplit[3]}${newVolNumSplit[4]}`\r\n                } else if (VolNumCount === 8) {\r\n                    return `${newVolNumSplit[0]}${newVolNumSplit[1]}.${newVolNumSplit[2]}${newVolNumSplit[3]}`\r\n                } else if (VolNumCount === 7) {\r\n                    return `${newVolNumSplit[0]}.${newVolNumSplit[1]}${newVolNumSplit[2]}`\r\n                } else if (VolNumCount === 6) {\r\n                    return `${newVolNumSplit[0]}${newVolNumSplit[1]}${newVolNumSplit[2]}.${newVolNumSplit[3]}${newVolNumSplit[4]}`\r\n                } else if (VolNumCount === 5) {\r\n                    return `${newVolNumSplit[0]}${newVolNumSplit[1]}.${newVolNumSplit[2]}${newVolNumSplit[3]}`\r\n                } else if (VolNumCount === 4) {\r\n                    return `${newVolNumSplit[0]}.${newVolNumSplit[1]}${newVolNumSplit[2]}`\r\n                }\r\n\r\n            }\r\n        }\r\n        if (commaregex.test(newVol)) {\r\n            const VolSplit = newVol.split(commaregex)\r\n            const Abbreviation = () => {\r\n                if (newVol.match(commaregex).length > 0) {\r\n                    const CommaCount = newVol.match(commaregex).length;\r\n                    if (CommaCount === 3) {\r\n                        return `${formattednewVol()}B`\r\n                    } else if (CommaCount === 2) {\r\n                        return `${formattednewVol()}M`\r\n                    } else if (CommaCount === 1) {\r\n                        return `${formattednewVol()}TH`\r\n                    }\r\n                }\r\n            }\r\n            return `$${Abbreviation()}`\r\n        }\r\n    },\r\n    newPrice: (price) => {\r\n        if (String(price)[0] === '0') {\r\n            return price.toFixed(4)\r\n        } else if (String(price)[0] !== '0') {\r\n            return price.toFixed(2)\r\n        }\r\n    },\r\n    setPriceColor: (priceChange) => {\r\n        if (Math.sign(priceChange) === -1) {\r\n            return {color: 'red'}\r\n        } else if (Math.sign(priceChange) === 1) {\r\n            return {color: '#23a455'}\r\n        } else if (Math.sign(priceChange) === 0) {\r\n            return {color: '#333333'}\r\n        }\r\n    },\r\n    setLinkParamByID: (id) => {\r\n        return `/cryptocurrencies/${id}`\r\n    },\r\n    addDirectionalTriangle: (priceChange) => {\r\n        if (Math.sign(priceChange) === 1) {\r\n            return '▴'\r\n        } else if (Math.sign(priceChange) === -1) {\r\n            return '▾'\r\n        } else if (Math.sign(priceChange) === 0) {\r\n            return;\r\n        }\r\n    },\r\n    setSparklineColor: (weeklyChange) => {\r\n        if (Math.sign(weeklyChange) === 1) {\r\n            return '#23a455'\r\n        } else if (Math.sign(weeklyChange) === -1) {\r\n            return 'red'\r\n        } else if (Math.sign(weeklyChange) === 0) {\r\n            return 'black'\r\n        }\r\n    }\r\n}\r\nexport default TableFunctions;","D:\\React Projects\\cryptostats\\src\\components\\Crypto\\Crypto.js",["83","84","85","86","87"],"D:\\React Projects\\cryptostats\\src\\components\\Table\\useSortableData.js",["88"],"import React, {useMemo, useContext} from 'react'\r\nimport TableContext from '../context/TableContext/TableContext'\r\n\r\n\r\nconst useSortableData = (items) => {\r\n\r\n    const {SORTEDFIELD, setSortField} = useContext(TableContext);\r\n\r\n  \r\n    const sortedItems = useMemo(() => {\r\n      let sortableItems = [...items];\r\n      if (SORTEDFIELD !== null) {\r\n        sortableItems.sort((a, b) => {\r\n          if (a[SORTEDFIELD.key] < b[SORTEDFIELD.key]) {\r\n            return SORTEDFIELD.direction === 'ascending' ? -1 : 1;\r\n          }\r\n          if (a[SORTEDFIELD.key] > b[SORTEDFIELD.key]) {\r\n            return SORTEDFIELD.direction === 'ascending' ? 1 : -1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      return sortableItems;\r\n    }, [items, SORTEDFIELD]);\r\n  \r\n    const requestSort = (key) => {\r\n      let direction = 'ascending';\r\n      if (\r\n        SORTEDFIELD &&\r\n        SORTEDFIELD.key === key &&\r\n        SORTEDFIELD.direction === 'ascending'\r\n      ) {\r\n        direction = 'descending';\r\n      }\r\n      setSortField({ key, direction });\r\n    };\r\n  \r\n    return { items: sortedItems, requestSort, SORTEDFIELD };\r\n  };\r\n\r\nexport default useSortableData;","D:\\React Projects\\cryptostats\\src\\components\\Table\\TablePagination.js",["89","90","91","92"],"import TableContext from '../context/TableContext/TableContext'\r\nimport React, {useEffect, useContext} from 'react'\r\nimport './TablePagination.css'\r\n\r\nconst TablePagination = () => {\r\n    const {CURRENTPAGE, POSTSPERPAGE, LOADING, setCurrentPage, GetCryptos} = useContext(TableContext);\r\n    const totalPages = 21; // total pages + 1\r\n    const PageNumbers = [];\r\n    for (let i=1; i < totalPages; i++) {\r\n        PageNumbers.push(i)\r\n    }\r\n\r\n    const BackLimit = () => {\r\n        if (CURRENTPAGE === 1) {\r\n            return;\r\n        } else {\r\n            return PageNumbers[CURRENTPAGE - 1]\r\n        }\r\n    }\r\n    return (\r\n        <div className='pagination pagination--primary'>\r\n            <ul className='paginationul paginationul--primary'>\r\n                <button className='paginationul_button' onClick={() => {\r\n                    /* setCurrentPage(BackLimit(), POSTSPERPAGE) */\r\n                }}>\r\n                    {`<`}\r\n                </button>\r\n                {PageNumbers.map((item, i) => {\r\n                    return <button className='paginationul__button' onClick={() => {\r\n                        setCurrentPage(item, POSTSPERPAGE)\r\n                    }}>\r\n                                {item}\r\n                            </button>\r\n                })}\r\n                <button className='paginationul_button' onClick={() => {\r\n                    /* setCurrentPage(PageNumbers[CURRENTPAGE], POSTSPERPAGE) */\r\n                }}>\r\n                    {`>`}\r\n                </button>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoContext.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoState.js",[],"D:\\React Projects\\cryptostats\\src\\components\\context\\CryptoContext\\CryptoReducer.js",[],"D:\\React Projects\\cryptostats\\src\\components\\layout\\Loader\\Loader.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":4,"column":37,"nodeType":"99","messageId":"100","endLine":4,"endColumn":52},{"ruleId":"97","severity":1,"message":"101","line":14,"column":30,"nodeType":"99","messageId":"100","endLine":14,"endColumn":41},{"ruleId":"97","severity":1,"message":"102","line":14,"column":82,"nodeType":"99","messageId":"100","endLine":14,"endColumn":94},{"ruleId":"97","severity":1,"message":"103","line":62,"column":96,"nodeType":"99","messageId":"100","endLine":62,"endColumn":104},{"ruleId":"97","severity":1,"message":"104","line":62,"column":121,"nodeType":"99","messageId":"100","endLine":62,"endColumn":141},{"ruleId":"105","severity":1,"message":"106","line":68,"column":41,"nodeType":"107","endLine":68,"endColumn":132},{"ruleId":"97","severity":1,"message":"108","line":33,"column":19,"nodeType":"99","messageId":"100","endLine":33,"endColumn":27},{"ruleId":"97","severity":1,"message":"109","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":23},{"ruleId":"97","severity":1,"message":"110","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":14},{"ruleId":"97","severity":1,"message":"111","line":8,"column":23,"nodeType":"99","messageId":"100","endLine":8,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":12,"column":8,"nodeType":"114","endLine":12,"endColumn":10,"suggestions":"115"},{"ruleId":"105","severity":1,"message":"106","line":19,"column":13,"nodeType":"107","endLine":19,"endColumn":55},{"ruleId":"97","severity":1,"message":"116","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"117","line":2,"column":16,"nodeType":"99","messageId":"100","endLine":2,"endColumn":25},{"ruleId":"97","severity":1,"message":"111","line":6,"column":39,"nodeType":"99","messageId":"100","endLine":6,"endColumn":46},{"ruleId":"97","severity":1,"message":"118","line":6,"column":64,"nodeType":"99","messageId":"100","endLine":6,"endColumn":74},{"ruleId":"97","severity":1,"message":"119","line":13,"column":11,"nodeType":"99","messageId":"100","endLine":13,"endColumn":20},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'SparklinesSpots' is defined but never used.","Identifier","unusedVar","'SORTEDFIELD' is assigned a value but never used.","'setSortField' is assigned a value but never used.","'priceBtc' is assigned a value but never used.","'priceChange7d_CG_USD' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'VolSplit' is assigned a value but never used.","'mockComponent' is defined but never used.","'Loader' is defined but never used.","'LOADING' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetCrypto' and 'match.params.CryptoID'. Either include them or remove the dependency array.","ArrayExpression",["122"],"'React' is defined but never used.","'useEffect' is defined but never used.","'GetCryptos' is assigned a value but never used.","'BackLimit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [GetCrypto, match.params.CryptoID]",{"range":"125","text":"126"},[399,401],"[GetCrypto, match.params.CryptoID]"]